@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model IEnumerable<Marquesita.Models.Business.Sale>
@{
    ViewData["Title"] = "Index";
    Layout = "_LayoutDashboard";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Ventas</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a asp-controller="Sale" asp-action="Index">Ventas</a></li>
                    <li class="breadcrumb-item active">Dashboard</li>
                </ol>
            </div>
        </div>
    </div>
</div>
@if (ViewBag.SaleSuccess != null)
{
    <div class="content">
        <div class="container-fluid">
            <div class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <h5><i class="icon fas fa-check"></i> ¡Listo!</h5>
                @ViewBag.SaleSuccess
            </div>
        </div>
    </div>
}
<section class="content">
    <div class="card card-solid">
        <div class="card-body">
            <div class="fa-pull-right">
                <a asp-controller="Sale" asp-action="DownloadPDFReport" class="btn btn-primary btn-block" title="Generar Reporte PDF"><i class="fas fa-file-pdf"></i></a>
            </div>
            <span class="fa-pull-right">&nbsp;&nbsp;</span>
            <div class="fa-pull-right">
                <a asp-controller="Sale" asp-action="DownloadExcelReport" class="btn btn-primary btn-block" title="Generar Reporte Excel"><i class="fas fa-file-excel"></i></a>
            </div>
            <span class="fa-pull-right">&nbsp;&nbsp;</span>
            @if ((await AuthorizationService.AuthorizeAsync(User, "CanAddSales")).Succeeded)
            {
                <div class="fa-pull-right">
                    <a asp-controller="Sale" asp-action="AddClientSale" class="btn btn-primary btn-block" title="Nueva Venta"><i class="fas fa-plus-square"></i></a>
                </div>
                <br /><br />
            }
            <table id="dataTable" class="table table-bordered table-striped" style="width: 100%;">
                <thead>
                    <tr>
                        <th class="text-center" style="width: 14.2857142857%">Cliente</th>
                        <th class="text-center" style="width: 14.2857142857%">Fecha</th>
                        <th class="text-center" style="width: 14.2857142857%">Tipo de venta</th>
                        <th class="text-center" style="width: 14.2857142857%">Estado</th>
                        <th class="text-center" style="width: 14.2857142857%">Vendedor</th>
                        <th class="text-center" style="width: 14.2857142857%">Monto Total</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var sale in Model)
                    {
                        <tr>
                            <td style="width: 14.2857142857%">
                                @if (sale.Date.ToShortDateString() == DateTime.Now.ToShortDateString())
                                {
                                    @await Component.InvokeAsync("EcommerceClientInfo", new { userId = sale.UserId })
                                    <span class="badge badge-info">Nueva orden</span>
                                }
                                else
                                {
                                    @await Component.InvokeAsync("EcommerceClientInfo", new { userId = sale.UserId })
                                }

                            </td>
                            <td class="text-center" style="width: 14.2857142857%">@sale.Date.ToShortDateString()</td>
                            <td class="text-center" style="width: 14.2857142857%">@sale.TypeOfSale</td>
                            <td class="text-center" style="width: 14.2857142857%">@sale.SaleStatus</td>
                            @if (sale.EmployeeId != null)
                            {
                                <td style="width: 14.2857142857%">
                                    @await Component.InvokeAsync("EcommerceClientInfo", new { userId = sale.EmployeeId })
                                </td>
                            }
                            else
                            {
                                <td class="text-center" style="width: 14.2857142857%">-</td>
                            }
                            <td class="text-center" style="width: 14.2857142857%">S./ @sale.TotalAmount</td>
                            <td style="width: 14.2857142857%">
                                <div class="form-row justify-content-center">
                                    <a asp-controller="Sale" asp-action="Edit" asp-route-saleId="@sale.Id" class="btn btn-warning" title="Editar"><i class="fas fa-edit"></i></a><span>&nbsp</span>
                                    <a asp-controller="Sale" asp-action="Detail" asp-route-saleId="@sale.Id" class="btn btn-info" title="Detalles"><i class="fas fa-info-circle"></i></a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>

<script>
    $(document).ready(function () {
        $("#dataTable").DataTable({
            order: [[1, 'desc']],
            "responsive": true,
            "autoWidth": false,
            "language": {
                "sProcessing": "Procesando...",
                "sLengthMenu": "Mostrar _MENU_ registros",
                "sZeroRecords": "No se encontraron resultados",
                "sEmptyTable": "Ningún dato disponible en esta tabla",
                "sInfo": "Registros del _START_ al _END_ de un total de _TOTAL_",
                "sInfoEmpty": "Registros del 0 al 0 de un total de 0",
                "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                "sInfoPostFix": "",
                "sSearch": "Buscar:",
                "sUrl": "",
                "sInfoThousands": ",",
                "sLoadingRecords": "Cargando...",
                "oPaginate": {
                    "sFirst": "Primero",
                    "sLast": "Último",
                    "sNext": "Siguiente",
                    "sPrevious": "Anterior"
                },
                "oAria": {
                    "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                    "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                }
            }
        });
        SaleListActiveLink();
    });
</script>





