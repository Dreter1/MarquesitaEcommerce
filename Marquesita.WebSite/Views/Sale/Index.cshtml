@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model List<Marquesita.Models.Business.Sale>
@{
    ViewData["Title"] = "Index";
    Layout = "_LayoutDashboard";
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Ventas</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a asp-controller="Sale" asp-action="Index">Ventas</a></li>
                    <li class="breadcrumb-item active">Dashboard</li>
                </ol>
            </div>
        </div>
    </div>
</div>
@if (ViewBag.SaleSuccess != null)
{
    <div class="content">
        <div class="container-fluid">
            <div class="alert alert-success alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <h5><i class="icon fas fa-check"></i> ¡Listo!</h5>
                @ViewBag.SaleSuccess
            </div>
        </div>
    </div>
}
<section class="content">
    <div class="card card-solid">
        <div class="card-body">
            @if ((await AuthorizationService.AuthorizeAsync(User, "CanAddSales")).Succeeded)
            {
                <div class="fa-pull-right">
                    <a asp-controller="Sale" asp-action="AddClientSale" class="btn btn-primary btn-block" title="Nueva Venta"><i class="fas fa-plus-square"></i></a>
                </div>
                <br /><br />
            }

            <table id="dataTable" class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th class="text-center">Cliente</th>
                        <th class="text-center">Fecha</th>
                        <th class="text-center">Tipo de venta</th>
                        <th class="text-center">Estado</th>
                        <th class="text-center">Vendedor</th>
                        <th class="text-center">Monto Total</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var sale in Model)
                    {
                    <tr>
                        <td>
                            @await Component.InvokeAsync("EcommerceClientInfo", new { userId = sale.UserId })
                        </td>
                        <td class="text-center">@sale.Date.ToShortDateString()</td>
                        <td class="text-center">@sale.TypeOfSale</td>
                        <td class="text-center">@sale.SaleStatus</td>
                        @if (sale.EmployeeId != null)
                        {
                            <td>
                                @await Component.InvokeAsync("EcommerceClientInfo", new { userId = sale.EmployeeId })
                            </td>
                        }
                        else
                        {
                            <td class="text-center">-</td>
                        }
                        <td class="text-center">S./ @sale.TotalAmount</td>
                        <td>
                            <div class="form-row justify-content-center">
                                <a asp-controller="Sale" asp-action="Edit" asp-route-saleId="@sale.Id" class="btn btn-warning" title="Editar"><i class="fas fa-edit"></i></a><span>&nbsp</span>
                                <a asp-controller="Sale" asp-action="Detail" asp-route-saleId="@sale.Id" class="btn btn-info" title="Detalles"><i class="fas fa-info-circle"></i></a>
                            </div>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>

        </div>
    </div>

</section>

<script>
    $(document).ready(function () {
        dataTableScript();
    });
</script>





